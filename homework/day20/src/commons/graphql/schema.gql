# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type RentExplain {
  id: String!
  imageUrl: String!
  Exist: Boolean!
  contents: String!
}

type RentImage {
  id: String!
  url: String!
  isAuth: Boolean!
}

type RentToknow {
  id: String!
  rule: String!
  health_safty: String!
  refund_policy: String!
}

type RentHost {
  id: String!
  contents: String!
  isAuth: Boolean!
  total_pre: Int!
  host_nick: String!
}

type RentTrans {
  id: String!
  lists: String!
  rent: [Rent!]!
}

type RentFacility {
  id: String!
  lists: String!
  rent: [Rent!]!
}

type RentLocation {
  id: String!
  lists: String!
  rent: [Rent!]!
}

type Rent {
  id: String!
  house_name: String!
  star_score: Float!
  pre_score_clean: Float!
  pre_score_comu: Float!
  pre_score_checkin: Float!
  pre_score_exact: Float!
  pre_score_location: Float!
  pre_score_satisfy: Float!
  rent_pre_number: Float!
  rent_contents: String!
  rentExplain: RentExplain!
  rentImage: RentImage!
  rentToknow: RentToknow!
  rentHost: RentHost!
  rentFacility: RentFacility!
  rentTrans: [RentTrans!]!
  rentLocation: [RentLocation!]!
}

type RentCustomer {
  id: String!
  contents: String!
  rent: Rent!
}

type RentUser {
  id: String!
  email: String!
  name: String!
  birth: DateTime!
  rent: Rent!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  fetchRents: [Rent!]!
  fetchRentsWithdeleted: [Rent!]!
  fetchRent(rentId: String!): Rent!
  fetchRentWithdeleted(rentId: String!): Rent!
  fetchRentHosts: [RentHost!]!
  fetchRentHostsWithdeleted: [RentHost!]!
  fetchRentHost(rentHostId: String!): RentHost!
  fetchRentHostWithdeleted(rentHostId: String!): RentHost!
  fetchRentUsers: [RentUser!]!
  fetchRentUser(rentUserId: String!): RentUser!
  fetchCustomers: [RentCustomer!]!
  fetchCustomer(rentCustomerId: String!): RentCustomer!
}

type Mutation {
  createRent(createRentInput: createRentInput!, createRentScoreInput: createRentScoreInput!): Rent!
  updateRent(RentUserId: String!, updateRentUserInput: updateRentUserInput!): RentUser!
  deleteRent(rentId: String!): Boolean!
  restoreOneRent(rentId: String!): Boolean!
  createRentHost(createRentHostInput: createRentHostInput!): RentHost!
  updateRentHost(rentHostId: String!, updateRentHostInput: updateRentHostInput!): RentHost!
  deleteRentHost(rentHostId: String!): Boolean!
  restoreOneRentHost(rentHostId: String!): Boolean!
  createUser(createUserInput: createRentUserInput!): RentUser!
  deleteRentUser(rentUserId: String!): Boolean!
  createRentCustomer(createRentCustomerInput: createRentCustomerInput!): RentCustomer!
}

input createRentInput {
  house_name: String!
  star_score: Float!
  rent_pre_number: Float!
  rent_contents: String!
}

input createRentScoreInput {
  pre_score_clean: Float!
  pre_score_comu: Float!
  pre_score_checkin: Float!
  pre_score_exact: Float!
  pre_score_location: Float!
  pre_score_satisfy: Float!
  rentHostId: String!
  rentImage: RentImageInput!
  rentToknow: RentToknowInput!
  rentExplain: RentExplainInput!
  rentFacility: [String!]!
  rentLocation: [String!]!
  rentTrans: [String!]!
}

input RentImageInput {
  url: String!
  isAuth: Boolean!
}

input RentToknowInput {
  rule: String!
  health_safty: String!
  refund_policy: String!
}

input RentExplainInput {
  imageUrl: String!
  Exist: Boolean!
  contents: String!
}

input updateRentUserInput {
  email: String
  password: String
  name: String
  birth: DateTime
  rentId: String
}

input createRentHostInput {
  isAuth: Boolean!
  contents: String!
  total_pre: Int!
  host_nick: String!
}

input updateRentHostInput {
  isAuth: Boolean
  contents: String
  total_pre: Int
  host_nick: String
}

input createRentUserInput {
  email: String!
  password: String!
  name: String!
  birth: DateTime!
  rentId: String!
}

input createRentCustomerInput {
  contents: String!
  rentId: String!
}